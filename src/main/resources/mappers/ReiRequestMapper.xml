<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.iceberg.dao.ReiRequestMapper">

    <insert id="add" parameterType="com.iceberg.entity.ReimbursementRequest" useGeneratedKeys="true"
        keyProperty="id">
        insert into bill(id, title, userid, money, typeid, remark, paywayid,receiveraccount)
            value (null, #{title}, #{userid}, #{money}, #{typeid.value}, #{remark},
                   #{paywayid}, #{receiveraccount})
    </insert>

    <update id="update" parameterType="com.iceberg.entity.ReimbursementRequest">
        update bill
        <set>
            <if test="money!=null">money = #{money},</if>
            <if test="typeid!=null">typeid = #{typeid.value},</if>
            <if test="remark!=null">remark = #{remark},</if>
            <if test="paywayid!=null">paywayid = #{paywayid},</if>
            <if test="receiveraccount!=null"> receiveraccount = #{receiveraccount},</if>
        </set>
        where id = #{id}
    </update>

    <delete id="del">
        delete
        from bill
        where id = #{id}
    </delete>
    <!--TODO: groupid's type: int or string?-->
    <select id="findByWhereNoPage" resultType="com.iceberg.entity.ReimbursementRequest"
        parameterType="com.iceberg.entity.ReimbursementRequest">
        select *, type.name type from bill left join type on bill.typeid = type.id left join payway
        on paywayid = payway.id left join user on bill.userid = user.id
        <where>
            <if test="id!=null">and bill.id = #{id}</if>
            <if test="groupid!=null">and userid in (select id from user where groupid =
                #{groupid})
            </if>
            <if test="remark!=null">and bill.remark = #{remark}</if>
            <if test="receiveraccount!=null">and bill.receiveraccount = #{receiveraccount}</if>
            <if test="typeid!=null">and typeid = #{typeid.value}</if>
            <if test="userid!=null">and userid = #{userid}</if>
            <if test="title!=null">and title = #{title}</if>
            <if test="remark!=null">and remark = #{remark}</if>
            <!--            <if test="realname!=null"> and realname = #{realname}</if>-->
            # paywayid always has a default value zero. remove from where clause
            <!--            <if test="paywayid!=null"> and paywayid = #{paywayid}</if>-->
            <!--            <if test="startTime!=null"> and time >= #{startTime}</if>-->
            <!--            <if test="endTime!=null"> and time &lt;= #{endTime}</if>-->
        </where>
    </select>
<!--    TODO: payway need to be checked-->

    <select id="findByWhere" resultType="com.iceberg.entity.ReimbursementRequest"
        parameterType="com.iceberg.utils.PageModel">
        select bill.* , user.realname, payway.payway, type.name type from bill left join user on
        bill.userid = user.id left join type on bill.typeid = type.id
        left join payway on paywayid = payway.id
        <where>
            <if test="data.groupid!=null">and userid in (select id from user where groupid =
                #{data.groupid})
            </if>
            <if test="data.id!=null">and bill.id = #{data.id}</if>
            <if test="data.title!=null">and bill.title = #{data.title}</if>
            <if test="data.typeid!=null">and bill.typeid = #{data.typeid.value}</if>
            <if test="data.userid!=null">and bill.userid = #{data.userid}</if>
            <if test="data.receiveraccount!=null">and bill.userid = #{data.receiveraccount}</if>
            <!--            <if test="data.realname!=null ">and realname like concat('%',#{data.realname},'%')</if>-->
            <if test="data.money!=null">and money = #{data.money}</if>
            <if test="data.remark!=null">and remark like concat('%',#{data.remark},'%')</if>
            <!--            <if test="data.paywayid!=null">and paywayid = #{data.paywayid}</if>-->
            <!--            <if test="data.startTime!=null">and time >= #{data.startTime}</if>-->
            <!--            <if test="data.endTime!=null">and time &lt;= #{data.endTime}</if>-->
        </where>
        order by time desc
        limit #{beginIndex},#{pageSize}
    </select>

    <select id="getMonthlyInfo" resultType="java.util.HashMap"
        parameterType="com.iceberg.utils.PageModel">
        select typeid, sum(money)
        from bill
        where userid = #{data.userid}
          and time >= #{data.startTime}
          and time &lt;= #{data.endTime}
        GROUP BY typeid
    </select>

    <select id="getTotalByWhere" resultType="java.lang.Integer"
        parameterType="com.iceberg.utils.PageModel">
        select count(bill.id) from bill left join user on bill.userid = user.id left join type on
        bill.typeid = type.id
        left join payway on paywayid = payway.id
        <where>
            <if test="data.groupid!=null">and userid in (select id from user where groupid =
                #{data.groupid})
            </if>
            <if test="data.id!=null">and bill.id = #{data.id}</if>
            <if test="data.title!=null">and bill.title = #{data.title}</if>
            <if test="data.typeid!=null">and bill.typeid = #{data.typeid.value}</if>
            <if test="data.userid!=null">and bill.userid = #{data.userid}</if>
            <if test="data.receiveraccount!=null">and bill.userid = #{data.receiveraccount}</if>
            <!--            <if test="data.realname!=null ">and realname like concat('%',#{data.realname},'%')</if>-->
            <if test="data.money!=null">and money = #{data.money}</if>
            <if test="data.remark!=null">and remark like concat('%',#{data.remark},'%')</if>
            <!--            <if test="data.paywayid!=null">and paywayid = #{data.paywayid}</if>-->
            <!--            <if test="data.startTime!=null">and time >= #{data.startTime}</if>-->
            <!--            <if test="data.endTime!=null">and time &lt;= #{data.endTime}</if>-->
        </where>
    </select>


    <select id="getAllPayways" resultType="com.iceberg.entity.Payway">
        select *
        from payway
    </select>

</mapper>
